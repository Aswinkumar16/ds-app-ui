{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\ASWIN\\\\datasci-ui\\\\src\\\\FileUploadWithIcon.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './index.css';\nimport { UploadOutlined } from '@ant-design/icons';\nimport { Button, message, Upload } from 'antd';\nimport { Card, Modal, Col } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUploadWithIcon = () => {\n  _s();\n  const [fileList, setFileList] = useState([]);\n  const [uploading, setUploading] = useState(false);\n  const [data, setData] = useState([]);\n  const [previewVisible, setPreviewVisible] = useState(false);\n  const [previewImage, setPreviewImage] = useState('');\n  const itemsPerGroup = 3;\n  const cardGroups = data.map(dataArray => {\n    const groups = [];\n    for (let i = 0; i < dataArray.length; i += itemsPerGroup) {\n      groups.push(dataArray.slice(i, i + itemsPerGroup));\n    }\n    return groups;\n  });\n  const handleUpload = () => {\n    if (fileList.length === 0) {\n      return; // Don't proceed if no file is selected\n    }\n\n    const formData = new FormData();\n    formData.append('file', fileList[0]); // Only append the first file\n    setUploading(true);\n\n    // You can use any AJAX library you like\n    fetch('http://localhost:8080/upload', {\n      method: 'POST',\n      body: formData\n    }).then(response => response.json()).then(jsonData => setData(jsonData)).then(() => {\n      setFileList([]);\n      message.success('Data Processed.');\n    }).catch(() => {\n      message.error('Upload failed.');\n    }).finally(() => {\n      setUploading(false);\n    });\n  };\n  const handlePreview = image => {\n    setPreviewVisible(true);\n    setPreviewImage(image);\n  };\n  const handleClosePreview = () => {\n    setPreviewVisible(false);\n  };\n  const props = {\n    onRemove: () => {\n      setFileList([]); // Clear the fileList on removal\n    },\n\n    beforeUpload: file => {\n      setFileList([file]); // Replace fileList with the selected file\n      return false;\n    },\n    fileList\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inner-upbox\",\n      children: [/*#__PURE__*/_jsxDEV(Upload, {\n        ...props,\n        maxCount: 1,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          icon: /*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 23\n          }, this),\n          children: \"Select File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: handleUpload,\n        disabled: fileList.length === 0 || uploading,\n        loading: uploading,\n        style: {\n          marginTop: 16\n        },\n        children: uploading ? 'Uploading' : 'Start Upload'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"down-container\",\n      children: [cardGroups.map((group, groupIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"group-title\",\n          children: [\"Title for Group \", groupIndex + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-grid\",\n          children: group.map((cardGroup, subGroupIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sub-card-group\",\n            children: cardGroup.map((card, index) => /*#__PURE__*/_jsxDEV(Col, {\n              xs: 24,\n              sm: 12,\n              md: 8,\n              lg: 8,\n              xl: 8,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                hoverable: true,\n                style: {\n                  width: 300\n                },\n                cover: /*#__PURE__*/_jsxDEV(\"img\", {\n                  alt: card.title,\n                  src: `data:image/png;base64,${card.image}`,\n                  onClick: () => handlePreview(`data:image/png;base64,${card.image}`)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 30\n                }, this),\n                children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n                  title: card.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 23\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 21\n              }, this)\n            }, cardIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 21\n            }, this))\n          }, subGroupIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, groupIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Modal, {\n        visible: previewVisible,\n        footer: null,\n        onCancel: handleClosePreview,\n        width: 600,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"Preview\",\n          style: {\n            width: '100%',\n            display: 'block'\n          },\n          src: previewImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUploadWithIcon, \"7UT1FgrgZOyeotuEj1WDIQbwgKs=\");\n_c = FileUploadWithIcon;\nexport default FileUploadWithIcon;\nvar _c;\n$RefreshReg$(_c, \"FileUploadWithIcon\");","map":{"version":3,"names":["React","useState","UploadOutlined","Button","message","Upload","Card","Modal","Col","jsxDEV","_jsxDEV","FileUploadWithIcon","_s","fileList","setFileList","uploading","setUploading","data","setData","previewVisible","setPreviewVisible","previewImage","setPreviewImage","itemsPerGroup","cardGroups","map","dataArray","groups","i","length","push","slice","handleUpload","formData","FormData","append","fetch","method","body","then","response","json","jsonData","success","catch","error","finally","handlePreview","image","handleClosePreview","props","onRemove","beforeUpload","file","children","className","maxCount","icon","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","disabled","loading","style","marginTop","group","groupIndex","cardGroup","subGroupIndex","card","index","xs","sm","md","lg","xl","hoverable","width","cover","alt","title","src","Meta","cardIndex","visible","footer","onCancel","display","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/ASWIN/datasci-ui/src/FileUploadWithIcon.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './index.css';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport { Button, message, Upload } from 'antd';\r\nimport { Card, Modal,Col } from 'antd';\r\n\r\nconst FileUploadWithIcon = () => {\r\n  const [fileList, setFileList] = useState([]);\r\n  const [uploading, setUploading] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [previewVisible, setPreviewVisible] = useState(false);\r\n  const [previewImage, setPreviewImage] = useState('');\r\n  const itemsPerGroup = 3;\r\n  const cardGroups = data.map(dataArray => {\r\n    const groups = [];\r\n    for (let i = 0; i < dataArray.length; i += itemsPerGroup) {\r\n      groups.push(dataArray.slice(i, i + itemsPerGroup));\r\n    }\r\n    return groups;\r\n  });\r\n  const handleUpload = () => {\r\n    if (fileList.length === 0) {\r\n      return; // Don't proceed if no file is selected\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', fileList[0]); // Only append the first file\r\n    setUploading(true);\r\n\r\n    // You can use any AJAX library you like\r\n    fetch('http://localhost:8080/upload', {\r\n      method: 'POST',\r\n      body: formData,\r\n    })\r\n      .then((response) => response.json())\r\n      .then((jsonData) => setData(jsonData))\r\n\r\n      .then(() => {\r\n        setFileList([]);\r\n        message.success('Data Processed.');\r\n      })\r\n      .catch(() => {\r\n        message.error('Upload failed.');\r\n      })\r\n      .finally(() => {\r\n        setUploading(false);\r\n      });\r\n  };\r\n  const handlePreview = (image) => {\r\n    setPreviewVisible(true);\r\n    setPreviewImage(image);\r\n  };\r\n\r\n  const handleClosePreview = () => {\r\n    setPreviewVisible(false);\r\n  };\r\n  const props = {\r\n    onRemove: () => {\r\n      setFileList([]); // Clear the fileList on removal\r\n    },\r\n    beforeUpload: (file) => {\r\n      setFileList([file]); // Replace fileList with the selected file\r\n      return false;\r\n    },\r\n    fileList,\r\n  };\r\n\r\n  return (\r\n    <div>\r\n    <div className='inner-upbox'>\r\n      <Upload {...props} maxCount={1}>\r\n        <Button icon={<UploadOutlined />}>Select File</Button>\r\n      </Upload>\r\n      <Button\r\n        type=\"primary\"\r\n        onClick={handleUpload}\r\n        disabled={fileList.length === 0 || uploading}\r\n        loading={uploading}\r\n        style={{\r\n          marginTop: 16,\r\n        }}\r\n      >\r\n        {uploading ? 'Uploading' : 'Start Upload'}\r\n      </Button>\r\n    </div>\r\n    \r\n    <div className=\"down-container\">\r\n        {cardGroups.map((group, groupIndex) => (\r\n          <div key={groupIndex} className=\"card-group\">\r\n            <h2 className=\"group-title\">Title for Group {groupIndex + 1}</h2>\r\n            <div className=\"card-grid\">\r\n              {group.map((cardGroup, subGroupIndex) => (\r\n                <div key={subGroupIndex} className=\"sub-card-group\">\r\n                  {cardGroup.map((card, index) => (\r\n                    <Col key={cardIndex} xs={24} sm={12} md={8} lg={8} xl={8}>\r\n\r\n                    <Card\r\n                      key={index}\r\n                      hoverable\r\n                      style={{ width: 300 }}\r\n                      cover={<img alt={card.title} src={`data:image/png;base64,${card.image}`} onClick={() => handlePreview(`data:image/png;base64,${card.image}`)} />}\r\n                    >\r\n                      <Card.Meta title={card.title} />\r\n                    </Card>\r\n                    </Col>\r\n\r\n                  ))}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ))}\r\n        <Modal visible={previewVisible} footer={null} onCancel={handleClosePreview} width={600}>\r\n          <img\r\n            alt=\"Preview\"\r\n            style={{ width: '100%', display: 'block' }}\r\n            src={previewImage}\r\n          />\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUploadWithIcon;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,aAAa;AACpB,SAASC,cAAc,QAAQ,mBAAmB;AAClD,SAASC,MAAM,EAAEC,OAAO,EAAEC,MAAM,QAAQ,MAAM;AAC9C,SAASC,IAAI,EAAEC,KAAK,EAACC,GAAG,QAAQ,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACgB,IAAI,EAAEC,OAAO,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACkB,cAAc,EAAEC,iBAAiB,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACoB,YAAY,EAAEC,eAAe,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAMsB,aAAa,GAAG,CAAC;EACvB,MAAMC,UAAU,GAAGP,IAAI,CAACQ,GAAG,CAACC,SAAS,IAAI;IACvC,MAAMC,MAAM,GAAG,EAAE;IACjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,SAAS,CAACG,MAAM,EAAED,CAAC,IAAIL,aAAa,EAAE;MACxDI,MAAM,CAACG,IAAI,CAACJ,SAAS,CAACK,KAAK,CAACH,CAAC,EAAEA,CAAC,GAAGL,aAAa,CAAC,CAAC;IACpD;IACA,OAAOI,MAAM;EACf,CAAC,CAAC;EACF,MAAMK,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAInB,QAAQ,CAACgB,MAAM,KAAK,CAAC,EAAE;MACzB,OAAO,CAAC;IACV;;IAEA,MAAMI,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEtB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACtCG,YAAY,CAAC,IAAI,CAAC;;IAElB;IACAoB,KAAK,CAAC,8BAA8B,EAAE;MACpCC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEL;IACR,CAAC,CAAC,CACCM,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,QAAQ,IAAKxB,OAAO,CAACwB,QAAQ,CAAC,CAAC,CAErCH,IAAI,CAAC,MAAM;MACVzB,WAAW,CAAC,EAAE,CAAC;MACfV,OAAO,CAACuC,OAAO,CAAC,iBAAiB,CAAC;IACpC,CAAC,CAAC,CACDC,KAAK,CAAC,MAAM;MACXxC,OAAO,CAACyC,KAAK,CAAC,gBAAgB,CAAC;IACjC,CAAC,CAAC,CACDC,OAAO,CAAC,MAAM;MACb9B,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC;EACN,CAAC;EACD,MAAM+B,aAAa,GAAIC,KAAK,IAAK;IAC/B5B,iBAAiB,CAAC,IAAI,CAAC;IACvBE,eAAe,CAAC0B,KAAK,CAAC;EACxB,CAAC;EAED,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;IAC/B7B,iBAAiB,CAAC,KAAK,CAAC;EAC1B,CAAC;EACD,MAAM8B,KAAK,GAAG;IACZC,QAAQ,EAAEA,CAAA,KAAM;MACdrC,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;IACnB,CAAC;;IACDsC,YAAY,EAAGC,IAAI,IAAK;MACtBvC,WAAW,CAAC,CAACuC,IAAI,CAAC,CAAC,CAAC,CAAC;MACrB,OAAO,KAAK;IACd,CAAC;IACDxC;EACF,CAAC;EAED,oBACEH,OAAA;IAAA4C,QAAA,gBACA5C,OAAA;MAAK6C,SAAS,EAAC,aAAa;MAAAD,QAAA,gBAC1B5C,OAAA,CAACL,MAAM;QAAA,GAAK6C,KAAK;QAAEM,QAAQ,EAAE,CAAE;QAAAF,QAAA,eAC7B5C,OAAA,CAACP,MAAM;UAACsD,IAAI,eAAE/C,OAAA,CAACR,cAAc;YAAAwD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAE;UAAAP,QAAA,EAAC;QAAW;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,eACTnD,OAAA,CAACP,MAAM;QACL2D,IAAI,EAAC,SAAS;QACdC,OAAO,EAAE/B,YAAa;QACtBgC,QAAQ,EAAEnD,QAAQ,CAACgB,MAAM,KAAK,CAAC,IAAId,SAAU;QAC7CkD,OAAO,EAAElD,SAAU;QACnBmD,KAAK,EAAE;UACLC,SAAS,EAAE;QACb,CAAE;QAAAb,QAAA,EAEDvC,SAAS,GAAG,WAAW,GAAG;MAAc;QAAA2C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAENnD,OAAA;MAAK6C,SAAS,EAAC,gBAAgB;MAAAD,QAAA,GAC1B9B,UAAU,CAACC,GAAG,CAAC,CAAC2C,KAAK,EAAEC,UAAU,kBAChC3D,OAAA;QAAsB6C,SAAS,EAAC,YAAY;QAAAD,QAAA,gBAC1C5C,OAAA;UAAI6C,SAAS,EAAC,aAAa;UAAAD,QAAA,GAAC,kBAAgB,EAACe,UAAU,GAAG,CAAC;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACjEnD,OAAA;UAAK6C,SAAS,EAAC,WAAW;UAAAD,QAAA,EACvBc,KAAK,CAAC3C,GAAG,CAAC,CAAC6C,SAAS,EAAEC,aAAa,kBAClC7D,OAAA;YAAyB6C,SAAS,EAAC,gBAAgB;YAAAD,QAAA,EAChDgB,SAAS,CAAC7C,GAAG,CAAC,CAAC+C,IAAI,EAAEC,KAAK,kBACzB/D,OAAA,CAACF,GAAG;cAAiBkE,EAAE,EAAE,EAAG;cAACC,EAAE,EAAE,EAAG;cAACC,EAAE,EAAE,CAAE;cAACC,EAAE,EAAE,CAAE;cAACC,EAAE,EAAE,CAAE;cAAAxB,QAAA,eAEzD5C,OAAA,CAACJ,IAAI;gBAEHyE,SAAS;gBACTb,KAAK,EAAE;kBAAEc,KAAK,EAAE;gBAAI,CAAE;gBACtBC,KAAK,eAAEvE,OAAA;kBAAKwE,GAAG,EAAEV,IAAI,CAACW,KAAM;kBAACC,GAAG,EAAG,yBAAwBZ,IAAI,CAACxB,KAAM,EAAE;kBAACe,OAAO,EAAEA,CAAA,KAAMhB,aAAa,CAAE,yBAAwByB,IAAI,CAACxB,KAAM,EAAC;gBAAE;kBAAAU,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAE;gBAAAP,QAAA,eAEjJ5C,OAAA,CAACJ,IAAI,CAAC+E,IAAI;kBAACF,KAAK,EAAEX,IAAI,CAACW;gBAAM;kBAAAzB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAAC,GAL3BY,KAAK;gBAAAf,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAMN;YAAC,GATGyB,SAAS;cAAA5B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAUd,CAEN;UAAC,GAdMU,aAAa;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAelB,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA,GArBEQ,UAAU;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAsBf,CACN,CAAC,eACFnD,OAAA,CAACH,KAAK;QAACgF,OAAO,EAAEpE,cAAe;QAACqE,MAAM,EAAE,IAAK;QAACC,QAAQ,EAAExC,kBAAmB;QAAC+B,KAAK,EAAE,GAAI;QAAA1B,QAAA,eACrF5C,OAAA;UACEwE,GAAG,EAAC,SAAS;UACbhB,KAAK,EAAE;YAAEc,KAAK,EAAE,MAAM;YAAEU,OAAO,EAAE;UAAQ,CAAE;UAC3CN,GAAG,EAAE/D;QAAa;UAAAqC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACjD,EAAA,CApHID,kBAAkB;AAAAgF,EAAA,GAAlBhF,kBAAkB;AAsHxB,eAAeA,kBAAkB;AAAC,IAAAgF,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}