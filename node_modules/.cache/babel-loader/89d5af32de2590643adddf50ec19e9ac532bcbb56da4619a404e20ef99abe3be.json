{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\ASWIN\\\\datasci-ui\\\\src\\\\ColBox.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Card, Modal } from 'antd';\nimport '/antd/dist/antd.css'; // Import Ant Design styles\nimport './Antdesign.css'; // Import custom styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardData = [{\n  title: 'Title 1',\n  image: 'image1.jpg',\n  description: 'Description for Image 1'\n}, {\n  title: 'Title 2',\n  image: 'image2.jpg',\n  description: 'Description for Image 2'\n}, {\n  title: 'Title 3',\n  image: 'image3.jpg',\n  description: 'Description for Image 3'\n}, {\n  title: 'Title 4',\n  image: 'image4.jpg',\n  description: 'Description for Image 4'\n}, {\n  title: 'Title 5',\n  image: 'image5.jpg',\n  description: 'Description for Image 5'\n}, {\n  title: 'Title 6',\n  image: 'image6.jpg',\n  description: 'Description for Image 6'\n}, {\n  title: 'Title 7',\n  image: 'image7.jpg',\n  description: 'Description for Image 7'\n}, {\n  title: 'Title 8',\n  image: 'image8.jpg',\n  description: 'Description for Image 8'\n}, {\n  title: 'Title 9',\n  image: 'image9.jpg',\n  description: 'Description for Image 9'\n}];\nconst ColBox = () => {\n  _s();\n  const [previewImage, setPreviewImage] = React.useState('');\n  const [previewVisible, setPreviewVisible] = React.useState(false);\n  const handlePreview = image => {\n    setPreviewImage(image);\n    setPreviewVisible(true);\n  };\n  const handleClosePreview = () => {\n    setPreviewVisible(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-grid\",\n    children: [cardData.map((card, index) => /*#__PURE__*/_jsxDEV(Card, {\n      hoverable: true,\n      style: {\n        width: 300\n      },\n      cover: /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: `Image ${index}`,\n        src: card.image,\n        onClick: () => handlePreview(card.image)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 18\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n        title: card.title,\n        description: card.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Modal, {\n      visible: previewVisible,\n      footer: null,\n      onCancel: handleClosePreview,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"Preview\",\n        style: {\n          width: '100%'\n        },\n        src: previewImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(ColBox, \"U7n2b317/4OPRsF3SvMbGBvZSjM=\");\n_c = ColBox;\nexport default ColBox;\nvar _c;\n$RefreshReg$(_c, \"ColBox\");","map":{"version":3,"names":["React","Card","Modal","jsxDEV","_jsxDEV","cardData","title","image","description","ColBox","_s","previewImage","setPreviewImage","useState","previewVisible","setPreviewVisible","handlePreview","handleClosePreview","className","children","map","card","index","hoverable","style","width","cover","alt","src","onClick","fileName","_jsxFileName","lineNumber","columnNumber","Meta","visible","footer","onCancel","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/ASWIN/datasci-ui/src/ColBox.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Card, Modal } from 'antd';\r\nimport '/antd/dist/antd.css'; // Import Ant Design styles\r\nimport './Antdesign.css'; // Import custom styles\r\n\r\nconst cardData = [\r\n  { title: 'Title 1', image: 'image1.jpg', description: 'Description for Image 1' },\r\n  { title: 'Title 2', image: 'image2.jpg', description: 'Description for Image 2' },\r\n  { title: 'Title 3', image: 'image3.jpg', description: 'Description for Image 3' },\r\n  { title: 'Title 4', image: 'image4.jpg', description: 'Description for Image 4' },\r\n  { title: 'Title 5', image: 'image5.jpg', description: 'Description for Image 5' },\r\n  { title: 'Title 6', image: 'image6.jpg', description: 'Description for Image 6' },\r\n  { title: 'Title 7', image: 'image7.jpg', description: 'Description for Image 7' },\r\n  { title: 'Title 8', image: 'image8.jpg', description: 'Description for Image 8' },\r\n  { title: 'Title 9', image: 'image9.jpg', description: 'Description for Image 9' },\r\n];\r\n\r\nconst ColBox = () => {\r\n  const [previewImage, setPreviewImage] = React.useState('');\r\n  const [previewVisible, setPreviewVisible] = React.useState(false);\r\n\r\n  const handlePreview = (image) => {\r\n    setPreviewImage(image);\r\n    setPreviewVisible(true);\r\n  };\r\n\r\n  const handleClosePreview = () => {\r\n    setPreviewVisible(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"card-grid\">\r\n      {cardData.map((card, index) => (\r\n        <Card\r\n          key={index}\r\n          hoverable\r\n          style={{ width: 300 }}\r\n          cover={<img alt={`Image ${index}`} src={card.image} onClick={() => handlePreview(card.image)} />}\r\n        >\r\n          <Card.Meta title={card.title} description={card.description} />\r\n        </Card>\r\n      ))}\r\n      <Modal visible={previewVisible} footer={null} onCancel={handleClosePreview}>\r\n        <img alt=\"Preview\" style={{ width: '100%' }} src={previewImage} />\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ColBox;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}