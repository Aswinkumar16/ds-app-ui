{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\ASWIN\\\\datasci-ui\\\\src\\\\FileUploadWithIcon.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './index.css';\nimport { UploadOutlined } from '@ant-design/icons';\nimport { Button, message, Upload } from 'antd';\nimport { Card, Modal } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUploadWithIcon = ({\n  onResponse\n}) => {\n  _s();\n  const [fileList, setFileList] = useState([]);\n  const [uploading, setUploading] = useState(false);\n  const [data, setData] = useState([]);\n  const [previewVisible, setPreviewVisible] = useState(false);\n  const [previewImage, setPreviewImage] = useState('');\n  const cardGroups = [\"HeatMap\", \"Feature Importance\", \"Shap Summary Plot\"];\n  const handleUpload = () => {\n    if (fileList.length === 0) {\n      return; // Don't proceed if no file is selected\n    }\n\n    const formData = new FormData();\n    formData.append('file', fileList[0]); // Only append the first file\n    setUploading(true);\n\n    // You can use any AJAX library you like\n    fetch('http://localhost:8080/upload', {\n      method: 'POST',\n      body: formData\n    }).then(response => response.json()).then(jsonData => setData(jsonData)).then(() => {\n      setFileList([]);\n      message.success('Data Processed.');\n    }).catch(() => {\n      message.error('Upload failed.');\n    }).finally(() => {\n      setUploading(false);\n    });\n  };\n  const handlePreview = image => {\n    setPreviewVisible(true);\n    setPreviewImage(image);\n  };\n  const handleClosePreview = () => {\n    setPreviewVisible(false);\n  };\n  const props = {\n    onRemove: () => {\n      setFileList([]); // Clear the fileList on removal\n    },\n\n    beforeUpload: file => {\n      setFileList([file]); // Replace fileList with the selected file\n      return false;\n    },\n    fileList\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inner-upbox\",\n      children: [/*#__PURE__*/_jsxDEV(Upload, {\n        ...props,\n        maxCount: 1,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          icon: /*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 23\n          }, this),\n          children: \"Select File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: handleUpload,\n        disabled: fileList.length === 0 || uploading,\n        loading: uploading,\n        style: {\n          marginTop: 16\n        },\n        children: uploading ? 'Uploading' : 'Start Upload'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"down-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-grid\",\n        children: [data.map((card, index) => /*#__PURE__*/_jsxDEV(Card, {\n          hoverable: true,\n          style: {\n            width: 300\n          },\n          cover: /*#__PURE__*/_jsxDEV(\"img\", {\n            alt: card.title,\n            src: `data:image/png;base64,${card.image}`,\n            onClick: () => handlePreview(`data:image/png;base64,${card.image}`)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 18\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n            title: card.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 11\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, this)), /*#__PURE__*/_jsxDEV(Modal, {\n          visible: previewVisible,\n          footer: null,\n          onCancel: handleClosePreview,\n          width: 600,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            alt: \"Preview\",\n            style: {\n              width: '100%',\n              display: 'block'\n            },\n            src: previewImage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUploadWithIcon, \"7UT1FgrgZOyeotuEj1WDIQbwgKs=\");\n_c = FileUploadWithIcon;\nexport default FileUploadWithIcon;\nvar _c;\n$RefreshReg$(_c, \"FileUploadWithIcon\");","map":{"version":3,"names":["React","useState","UploadOutlined","Button","message","Upload","Card","Modal","jsxDEV","_jsxDEV","FileUploadWithIcon","onResponse","_s","fileList","setFileList","uploading","setUploading","data","setData","previewVisible","setPreviewVisible","previewImage","setPreviewImage","cardGroups","handleUpload","length","formData","FormData","append","fetch","method","body","then","response","json","jsonData","success","catch","error","finally","handlePreview","image","handleClosePreview","props","onRemove","beforeUpload","file","children","className","maxCount","icon","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","disabled","loading","style","marginTop","map","card","index","hoverable","width","cover","alt","title","src","Meta","visible","footer","onCancel","display","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/ASWIN/datasci-ui/src/FileUploadWithIcon.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './index.css';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport { Button, message, Upload } from 'antd';\r\nimport { Card, Modal } from 'antd';\r\n\r\nconst FileUploadWithIcon = ({ onResponse }) => {\r\n  const [fileList, setFileList] = useState([]);\r\n  const [uploading, setUploading] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [previewVisible, setPreviewVisible] = useState(false);\r\n  const [previewImage, setPreviewImage] = useState('');\r\n  const cardGroups = [\"HeatMap\",\"Feature Importance\",\"Shap Summary Plot\"];\r\n\r\n  const handleUpload = () => {\r\n    if (fileList.length === 0) {\r\n      return; // Don't proceed if no file is selected\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', fileList[0]); // Only append the first file\r\n    setUploading(true);\r\n\r\n    // You can use any AJAX library you like\r\n    fetch('http://localhost:8080/upload', {\r\n      method: 'POST',\r\n      body: formData,\r\n    })\r\n      .then((response) => response.json())\r\n      .then((jsonData) => setData(jsonData))\r\n\r\n      .then(() => {\r\n        setFileList([]);\r\n        message.success('Data Processed.');\r\n      })\r\n      .catch(() => {\r\n        message.error('Upload failed.');\r\n      })\r\n      .finally(() => {\r\n        setUploading(false);\r\n      });\r\n  };\r\n  const handlePreview = (image) => {\r\n    setPreviewVisible(true);\r\n    setPreviewImage(image);\r\n  };\r\n\r\n  const handleClosePreview = () => {\r\n    setPreviewVisible(false);\r\n  };\r\n  const props = {\r\n    onRemove: () => {\r\n      setFileList([]); // Clear the fileList on removal\r\n    },\r\n    beforeUpload: (file) => {\r\n      setFileList([file]); // Replace fileList with the selected file\r\n      return false;\r\n    },\r\n    fileList,\r\n  };\r\n\r\n  return (\r\n    <div>\r\n    <div className='inner-upbox'>\r\n      <Upload {...props} maxCount={1}>\r\n        <Button icon={<UploadOutlined />}>Select File</Button>\r\n      </Upload>\r\n      <Button\r\n        type=\"primary\"\r\n        onClick={handleUpload}\r\n        disabled={fileList.length === 0 || uploading}\r\n        loading={uploading}\r\n        style={{\r\n          marginTop: 16,\r\n        }}\r\n      >\r\n        {uploading ? 'Uploading' : 'Start Upload'}\r\n      </Button>\r\n    </div>\r\n    \r\n    <div className=\"down-container\">\r\n    <div className=\"card-grid\">\r\n      {data.map((card, index) => (\r\n        <Card\r\n          key={index}\r\n          hoverable\r\n          style={{ width: 300 }}\r\n          cover={<img alt={card.title} src={`data:image/png;base64,${card.image}`} onClick={() => handlePreview(`data:image/png;base64,${card.image}`)} />}\r\n        >\r\n          <Card.Meta title={card.title} />\r\n        </Card>\r\n      ))}\r\n      <Modal visible={previewVisible} footer={null} onCancel={handleClosePreview} width={600}>\r\n      <img\r\n          alt=\"Preview\"\r\n          style={{ width: '100%', display: 'block' }}\r\n          src={previewImage}\r\n        />\r\n          </Modal>\r\n    </div>\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUploadWithIcon;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}