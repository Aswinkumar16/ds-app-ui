{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\ASWIN\\\\datasci-ui\\\\src\\\\FileUploadWithIcon.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './index.css';\nimport { UploadOutlined } from '@ant-design/icons';\nimport { Button, message, Upload } from 'antd';\nimport { Card, Modal, Col, Row } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUploadWithIcon = () => {\n  _s();\n  const [fileList, setFileList] = useState([]);\n  const [uploading, setUploading] = useState(false);\n  const [data, setData] = useState([]);\n  const [previewVisible, setPreviewVisible] = useState(false);\n  const [previewImage, setPreviewImage] = useState('');\n  const itemsPerGroup = 3;\n  const cardGroups = data.map(dataArray => {\n    const groups = [];\n    for (let i = 0; i < dataArray.length; i += itemsPerGroup) {\n      groups.push(dataArray.slice(i, i + itemsPerGroup));\n    }\n    return groups;\n  });\n  const handleUpload = () => {\n    if (fileList.length === 0) {\n      return; // Don't proceed if no file is selected\n    }\n\n    const formData = new FormData();\n    formData.append('file', fileList[0]); // Only append the first file\n    setUploading(true);\n\n    // You can use any AJAX library you like\n    fetch('http://localhost:8080/upload', {\n      method: 'POST',\n      body: formData\n    }).then(response => response.json()).then(jsonData => setData(jsonData)).then(() => {\n      setFileList([]);\n      message.success('Data Processed.');\n    }).catch(() => {\n      message.error('Upload failed.');\n    }).finally(() => {\n      setUploading(false);\n    });\n  };\n  const handlePreview = image => {\n    setPreviewVisible(true);\n    setPreviewImage(image);\n  };\n  const handleClosePreview = () => {\n    setPreviewVisible(false);\n  };\n  const props = {\n    onRemove: () => {\n      setFileList([]); // Clear the fileList on removal\n    },\n\n    beforeUpload: file => {\n      setFileList([file]); // Replace fileList with the selected file\n      return false;\n    },\n    fileList\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inner-upbox\",\n      children: [/*#__PURE__*/_jsxDEV(Upload, {\n        ...props,\n        maxCount: 1,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          icon: /*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 23\n          }, this),\n          children: \"Select File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: handleUpload,\n        disabled: fileList.length === 0 || uploading,\n        loading: uploading,\n        style: {\n          marginTop: 16\n        },\n        children: uploading ? 'Uploading' : 'Start Upload'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"down-container\",\n      children: [plotsData.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"row-title\",\n          children: [\"Title for Row \", rowIndex + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          gutter: [16, 16],\n          justify: \"center\",\n          children: row.map((card, cardIndex) => /*#__PURE__*/_jsxDEV(Col, {\n            xs: 24,\n            sm: 12,\n            md: 8,\n            lg: 8,\n            xl: 8,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              hoverable: true,\n              style: {\n                width: '100%'\n              },\n              cover: /*#__PURE__*/_jsxDEV(\"img\", {\n                alt: card.title,\n                src: `data:image/png;base64,${card.image}`,\n                onClick: () => handlePreview(`data:image/png;base64,${card.image}`)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 28\n              }, this),\n              children: [/*#__PURE__*/_jsxDEV(Card.Meta, {\n                title: card.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 21\n              }, this), card.Boxtitle && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"box-title\",\n                children: card.Boxtitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 39\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 19\n            }, this)\n          }, cardIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)]\n      }, rowIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Modal, {\n        visible: previewVisible,\n        footer: null,\n        onCancel: handleClosePreview,\n        width: 600,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"Preview\",\n          style: {\n            width: '100%',\n            display: 'block'\n          },\n          src: previewImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUploadWithIcon, \"7UT1FgrgZOyeotuEj1WDIQbwgKs=\");\n_c = FileUploadWithIcon;\nexport default FileUploadWithIcon;\nvar _c;\n$RefreshReg$(_c, \"FileUploadWithIcon\");","map":{"version":3,"names":["React","useState","UploadOutlined","Button","message","Upload","Card","Modal","Col","Row","jsxDEV","_jsxDEV","FileUploadWithIcon","_s","fileList","setFileList","uploading","setUploading","data","setData","previewVisible","setPreviewVisible","previewImage","setPreviewImage","itemsPerGroup","cardGroups","map","dataArray","groups","i","length","push","slice","handleUpload","formData","FormData","append","fetch","method","body","then","response","json","jsonData","success","catch","error","finally","handlePreview","image","handleClosePreview","props","onRemove","beforeUpload","file","children","className","maxCount","icon","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","disabled","loading","style","marginTop","plotsData","row","rowIndex","gutter","justify","card","cardIndex","xs","sm","md","lg","xl","hoverable","width","cover","alt","title","src","Meta","Boxtitle","visible","footer","onCancel","display","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/ASWIN/datasci-ui/src/FileUploadWithIcon.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './index.css';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport { Button, message, Upload } from 'antd';\r\nimport { Card, Modal,Col,Row } from 'antd';\r\n\r\nconst FileUploadWithIcon = () => {\r\n  const [fileList, setFileList] = useState([]);\r\n  const [uploading, setUploading] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [previewVisible, setPreviewVisible] = useState(false);\r\n  const [previewImage, setPreviewImage] = useState('');\r\n  const itemsPerGroup = 3;\r\n  const cardGroups = data.map(dataArray => {\r\n    const groups = [];\r\n    for (let i = 0; i < dataArray.length; i += itemsPerGroup) {\r\n      groups.push(dataArray.slice(i, i + itemsPerGroup));\r\n    }\r\n    return groups;\r\n  });\r\n  const handleUpload = () => {\r\n    if (fileList.length === 0) {\r\n      return; // Don't proceed if no file is selected\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', fileList[0]); // Only append the first file\r\n    setUploading(true);\r\n\r\n    // You can use any AJAX library you like\r\n    fetch('http://localhost:8080/upload', {\r\n      method: 'POST',\r\n      body: formData,\r\n    })\r\n      .then((response) => response.json())\r\n      .then((jsonData) => setData(jsonData))\r\n\r\n      .then(() => {\r\n        setFileList([]);\r\n        message.success('Data Processed.');\r\n      })\r\n      .catch(() => {\r\n        message.error('Upload failed.');\r\n      })\r\n      .finally(() => {\r\n        setUploading(false);\r\n      });\r\n  };\r\n  const handlePreview = (image) => {\r\n    setPreviewVisible(true);\r\n    setPreviewImage(image);\r\n  };\r\n\r\n  const handleClosePreview = () => {\r\n    setPreviewVisible(false);\r\n  };\r\n  const props = {\r\n    onRemove: () => {\r\n      setFileList([]); // Clear the fileList on removal\r\n    },\r\n    beforeUpload: (file) => {\r\n      setFileList([file]); // Replace fileList with the selected file\r\n      return false;\r\n    },\r\n    fileList,\r\n  };\r\n\r\n  return (\r\n    <div>\r\n    <div className='inner-upbox'>\r\n      <Upload {...props} maxCount={1}>\r\n        <Button icon={<UploadOutlined />}>Select File</Button>\r\n      </Upload>\r\n      <Button\r\n        type=\"primary\"\r\n        onClick={handleUpload}\r\n        disabled={fileList.length === 0 || uploading}\r\n        loading={uploading}\r\n        style={{\r\n          marginTop: 16,\r\n        }}\r\n      >\r\n        {uploading ? 'Uploading' : 'Start Upload'}\r\n      </Button>\r\n    </div>\r\n    <div className=\"down-container\">\r\n        {plotsData.map((row, rowIndex) => (\r\n          <div key={rowIndex} className=\"card-row\">\r\n            <h2 className=\"row-title\">Title for Row {rowIndex + 1}</h2>\r\n            <Row gutter={[16, 16]} justify=\"center\">\r\n              {row.map((card, cardIndex) => (\r\n                <Col key={cardIndex} xs={24} sm={12} md={8} lg={8} xl={8}>\r\n                  <Card\r\n                    hoverable\r\n                    style={{ width: '100%' }}\r\n                    cover={<img alt={card.title} src={`data:image/png;base64,${card.image}`} onClick={() => handlePreview(`data:image/png;base64,${card.image}`)} />}\r\n                  >\r\n                    <Card.Meta title={card.title} />\r\n                    {card.Boxtitle && <div className=\"box-title\">{card.Boxtitle}</div>}\r\n                  </Card>\r\n                </Col>\r\n              ))}\r\n            </Row>\r\n          </div>\r\n        ))}\r\n        <Modal visible={previewVisible} footer={null} onCancel={handleClosePreview} width={600}>\r\n          <img\r\n            alt=\"Preview\"\r\n            style={{ width: '100%', display: 'block' }}\r\n            src={previewImage}\r\n          />\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUploadWithIcon;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}