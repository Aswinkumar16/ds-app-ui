{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\ASWIN\\\\datasci-ui\\\\src\\\\FileUploadWithIcon.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './index.css';\nimport { UploadOutlined } from '@ant-design/icons';\nimport { Button, message, Upload } from 'antd';\nimport ColBox from './ColBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FileUploadWithIcon = ({\n  onResponse\n}) => {\n  _s();\n  const [fileList, setFileList] = useState([]);\n  const [uploading, setUploading] = useState(false);\n  const handleUpload = () => {\n    if (fileList.length === 0) {\n      return; // Don't proceed if no file is selected\n    }\n\n    const formData = new FormData();\n    formData.append('file', fileList[0]); // Only append the first file\n    setUploading(true);\n\n    // You can use any AJAX library you like\n    fetch('http://localhost:8080/upload', {\n      method: 'POST',\n      body: formData\n    }).then(res => console.log(res.json())).then(() => {\n      setFileList([]);\n      message.success('Data Processed.');\n    }).catch(() => {\n      message.error('Upload failed.');\n    }).finally(() => {\n      setUploading(false);\n    });\n  };\n  const props = {\n    onRemove: () => {\n      setFileList([]); // Clear the fileList on removal\n    },\n\n    beforeUpload: file => {\n      setFileList([file]); // Replace fileList with the selected file\n      return false;\n    },\n    fileList\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Upload, {\n      ...props,\n      maxCount: 1,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        icon: /*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 23\n        }, this),\n        children: \"Select File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      onClick: handleUpload,\n      disabled: fileList.length === 0 || uploading,\n      loading: uploading,\n      style: {\n        marginTop: 16\n      },\n      children: uploading ? 'Uploading' : 'Start Upload'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(FileUploadWithIcon, \"4iMqflyqGiA5uXz5jak6SD2TKxo=\");\n_c = FileUploadWithIcon;\nexport default FileUploadWithIcon;\nvar _c;\n$RefreshReg$(_c, \"FileUploadWithIcon\");","map":{"version":3,"names":["React","useState","UploadOutlined","Button","message","Upload","ColBox","jsxDEV","_jsxDEV","Fragment","_Fragment","FileUploadWithIcon","onResponse","_s","fileList","setFileList","uploading","setUploading","handleUpload","length","formData","FormData","append","fetch","method","body","then","res","console","log","json","success","catch","error","finally","props","onRemove","beforeUpload","file","children","maxCount","icon","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","disabled","loading","style","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/ASWIN/datasci-ui/src/FileUploadWithIcon.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './index.css';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport { Button, message, Upload } from 'antd';\r\nimport ColBox from './ColBox';\r\n\r\nconst FileUploadWithIcon = ({ onResponse}) => {\r\n  const [fileList, setFileList] = useState([]);\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const handleUpload = () => {\r\n    if (fileList.length === 0) {\r\n      return; // Don't proceed if no file is selected\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', fileList[0]); // Only append the first file\r\n    setUploading(true);\r\n\r\n    // You can use any AJAX library you like\r\n    fetch('http://localhost:8080/upload', {\r\n      method: 'POST',\r\n      body: formData,\r\n    })\r\n      .then((res) => console.log(res.json()))\r\n      .then(() => {\r\n        setFileList([]);\r\n        message.success('Data Processed.');\r\n      })\r\n      .catch(() => {\r\n        message.error('Upload failed.');\r\n      })\r\n      .finally(() => {\r\n        setUploading(false);\r\n      });\r\n  };\r\n\r\n  const props = {\r\n    onRemove: () => {\r\n      setFileList([]); // Clear the fileList on removal\r\n    },\r\n    beforeUpload: (file) => {\r\n      setFileList([file]); // Replace fileList with the selected file\r\n      return false;\r\n    },\r\n    fileList,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Upload {...props} maxCount={1}>\r\n        <Button icon={<UploadOutlined />}>Select File</Button>\r\n      </Upload>\r\n      <Button\r\n        type=\"primary\"\r\n        onClick={handleUpload}\r\n        disabled={fileList.length === 0 || uploading}\r\n        loading={uploading}\r\n        style={{\r\n          marginTop: 16,\r\n        }}\r\n      >\r\n        {uploading ? 'Uploading' : 'Start Upload'}\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FileUploadWithIcon;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}