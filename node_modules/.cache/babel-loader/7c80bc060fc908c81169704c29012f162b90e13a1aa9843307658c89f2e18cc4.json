{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\ASWIN\\\\datasci-ui\\\\src\\\\FileUploadWithIcon.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './index.css';\nimport { UploadOutlined } from '@ant-design/icons';\nimport { Button, message, Upload } from 'antd';\nimport { Card, Modal, Row, Col } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUploadWithIcon = ({\n  onResponse\n}) => {\n  _s();\n  const [fileList, setFileList] = useState([]);\n  const [uploading, setUploading] = useState(false);\n  const [data, setData] = useState([]);\n  const [previewVisible, setPreviewVisible] = useState(false);\n  const [previewImage, setPreviewImage] = useState('');\n  const NamesTitles = [\"HeatMap\", \"Feature Importance\", \"Shap Summary Plot\"];\n  const handleUpload = () => {\n    if (fileList.length === 0) {\n      return; // Don't proceed if no file is selected\n    }\n\n    const formData = new FormData();\n    formData.append('file', fileList[0]); // Only append the first file\n    setUploading(true);\n\n    // You can use any AJAX library you like\n    fetch(`${process.env.REACT_APP_FLASK_API_PATH}`, {\n      method: 'POST',\n      body: formData\n    }).then(response => response.json()).then(jsonData => setData(jsonData)).then(() => {\n      setFileList([]);\n      message.success('Data Processed.');\n    }).catch(() => {\n      message.error('Data Processed Failed.');\n    }).finally(() => {\n      setUploading(false);\n    });\n  };\n  const handlePreview = image => {\n    setPreviewVisible(true);\n    setPreviewImage(image);\n  };\n  const handleClosePreview = () => {\n    setPreviewVisible(false);\n  };\n  const props = {\n    onRemove: () => {\n      setFileList([]); // Clear the fileList on removal\n    },\n\n    beforeUpload: file => {\n      setFileList([file]); // Replace fileList with the selected file\n      return false;\n    },\n    fileList\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inner-upbox\",\n      children: [/*#__PURE__*/_jsxDEV(Upload, {\n        ...props,\n        maxCount: 1,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          icon: /*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 23\n          }, this),\n          children: \"Select File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: handleUpload,\n        disabled: fileList.length === 0 || uploading,\n        loading: uploading,\n        style: {\n          marginTop: 16\n        },\n        children: uploading ? 'Uploading' : 'Start Upload'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"down-container\",\n      children: data.map((cards, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"h2-center\",\n          style: {\n            backgroundColor: 'lightgrey',\n            padding: '10px'\n          },\n          children: NamesTitles[index]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          gutter: 16,\n          className: \"rowtop\",\n          children: cards.map((card, inx) => /*#__PURE__*/_jsxDEV(Col, {\n            span: 8,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              title: card.title,\n              bordered: false,\n              style: {\n                width: '100%',\n                backgroundColor: 'lightgreen',\n                textAlign: 'center'\n              },\n              cover: /*#__PURE__*/_jsxDEV(\"img\", {\n                alt: card.title,\n                src: `data:image/png;base64,${card.image}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 26\n              }, this),\n              onClick: () => handlePreview(`data:image/png;base64,${card.image}`)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 19\n            }, this)\n          }, inx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      visible: previewVisible,\n      title: null,\n      footer: null,\n      onCancel: handleClosePreview,\n      centered: true,\n      width: 800,\n      bodyStyle: {\n        textAlign: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"Preview\",\n        src: previewImage,\n        style: {\n          maxWidth: '100%',\n          maxHeight: '80vh'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUploadWithIcon, \"7UT1FgrgZOyeotuEj1WDIQbwgKs=\");\n_c = FileUploadWithIcon;\nexport default FileUploadWithIcon;\nvar _c;\n$RefreshReg$(_c, \"FileUploadWithIcon\");","map":{"version":3,"names":["React","useState","UploadOutlined","Button","message","Upload","Card","Modal","Row","Col","jsxDEV","_jsxDEV","FileUploadWithIcon","onResponse","_s","fileList","setFileList","uploading","setUploading","data","setData","previewVisible","setPreviewVisible","previewImage","setPreviewImage","NamesTitles","handleUpload","length","formData","FormData","append","fetch","process","env","REACT_APP_FLASK_API_PATH","method","body","then","response","json","jsonData","success","catch","error","finally","handlePreview","image","handleClosePreview","props","onRemove","beforeUpload","file","children","className","maxCount","icon","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","disabled","loading","style","marginTop","map","cards","index","backgroundColor","padding","gutter","card","inx","span","title","bordered","width","textAlign","cover","alt","src","visible","footer","onCancel","centered","bodyStyle","maxWidth","maxHeight","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/ASWIN/datasci-ui/src/FileUploadWithIcon.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './index.css';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport { Button, message, Upload } from 'antd';\r\nimport { Card, Modal,Row,Col } from 'antd';\r\n\r\nconst FileUploadWithIcon = ({ onResponse }) => {\r\n  const [fileList, setFileList] = useState([]);\r\n  const [uploading, setUploading] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [previewVisible, setPreviewVisible] = useState(false);\r\n  const [previewImage, setPreviewImage] = useState('');\r\n\r\n  const NamesTitles = [\"HeatMap\",\"Feature Importance\",\"Shap Summary Plot\"]\r\n  const handleUpload = () => {\r\n    if (fileList.length === 0) {\r\n      return; // Don't proceed if no file is selected\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', fileList[0]); // Only append the first file\r\n    setUploading(true);\r\n\r\n    // You can use any AJAX library you like\r\n    fetch(`${process.env.REACT_APP_FLASK_API_PATH}`, {\r\n      method: 'POST',\r\n      body: formData,\r\n    })\r\n      .then((response) => response.json())\r\n      .then((jsonData) => setData(jsonData))\r\n\r\n      .then(() => {\r\n        setFileList([]);\r\n        message.success('Data Processed.');\r\n      })\r\n      .catch(() => {\r\n        message.error('Data Processed Failed.');\r\n      })\r\n      .finally(() => {\r\n        setUploading(false);\r\n      });\r\n  };\r\n  const handlePreview = (image) => {\r\n    setPreviewVisible(true);\r\n    setPreviewImage(image);\r\n  };\r\n\r\n  \r\n\r\n  const handleClosePreview = () => {\r\n    setPreviewVisible(false);\r\n  };\r\n  const props = {\r\n    onRemove: () => {\r\n      setFileList([]); // Clear the fileList on removal\r\n    },\r\n    beforeUpload: (file) => {\r\n      setFileList([file]); // Replace fileList with the selected file\r\n      return false;\r\n    },\r\n    fileList,\r\n  };\r\n\r\n  return (\r\n    <div>\r\n    <div className='inner-upbox'>\r\n      <Upload {...props} maxCount={1}>\r\n        <Button icon={<UploadOutlined />}>Select File</Button>\r\n      </Upload>\r\n      <Button\r\n        type=\"primary\"\r\n        onClick={handleUpload}\r\n        disabled={fileList.length === 0 || uploading}\r\n        loading={uploading}\r\n        style={{\r\n          marginTop: 16,\r\n        }}\r\n      >\r\n        {uploading ? 'Uploading' : 'Start Upload'}\r\n      </Button>\r\n    </div>\r\n    \r\n    <div className='down-container'>\r\n        {data.map((cards,index) => (\r\n            <div key={index} style={{marginTop:'10px'}}>\r\n              <h2 className='h2-center' style={{ backgroundColor: 'lightgrey', padding: '10px' }}>{NamesTitles[index]}</h2>\r\n              <Row gutter={16} className='rowtop'>\r\n              { cards.map((card,inx)=> (\r\n                <Col key={inx} span={8} >\r\n                  <Card\r\n                  title={card.title}\r\n                  bordered={false}\r\n                  style={{ width: '100%',backgroundColor: 'lightgreen' ,textAlign:'center'}}\r\n                  cover={<img alt={card.title} src={`data:image/png;base64,${card.image}`} />}\r\n                  onClick={() => handlePreview(`data:image/png;base64,${card.image}`)}\r\n                />\r\n                </Col>\r\n                ))}\r\n              \r\n          </Row>\r\n        \r\n            </div>\r\n            \r\n        ))}\r\n    </div>\r\n    <Modal\r\n      visible={previewVisible}\r\n      title={null}\r\n      footer={null}\r\n      onCancel={handleClosePreview}\r\n      centered\r\n      width={800}\r\n      bodyStyle={{ textAlign: 'center' }}\r\n    >\r\n      <img alt=\"Preview\" src={previewImage} style={{ maxWidth: '100%', maxHeight: '80vh' }} />\r\n    </Modal>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUploadWithIcon;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}