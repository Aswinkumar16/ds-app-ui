{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\ASWIN\\\\datasci-ui\\\\src\\\\ColBox.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Row, Col, Card, Modal } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst imageUrls = [{\n  id: 1,\n  url: 'image-url-1.jpg',\n  title: 'Image 1'\n}, {\n  id: 2,\n  url: 'image-url-2.jpg',\n  title: 'Image 2'\n}, {\n  id: 3,\n  url: 'image-url-3.jpg',\n  title: 'Image 3'\n}, {\n  id: 4,\n  url: 'image-url-4.jpg',\n  title: 'Image 4'\n}, {\n  id: 5,\n  url: 'image-url-5.jpg',\n  title: 'Image 5'\n}, {\n  id: 6,\n  url: 'image-url-6.jpg',\n  title: 'Image 6'\n}, {\n  id: 7,\n  url: 'image-url-7.jpg',\n  title: 'Image 7'\n}, {\n  id: 8,\n  url: 'image-url-8.jpg',\n  title: 'Image 8'\n}, {\n  id: 9,\n  url: 'image-url-9.jpg',\n  title: 'Image 9'\n}];\nconst ImageGridWithPreview = () => {\n  _s();\n  const [previewImage, setPreviewImage] = useState('');\n  const [previewTitle, setPreviewTitle] = useState('');\n  const [isPreviewVisible, setIsPreviewVisible] = useState(false);\n  const handleImageClick = (url, title) => {\n    setPreviewImage(url);\n    setPreviewTitle(title);\n    setIsPreviewVisible(true);\n  };\n  const handlePreviewClose = () => {\n    setIsPreviewVisible(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      gutter: [16, 16],\n      children: imageUrls.map(imageInfo => /*#__PURE__*/_jsxDEV(Col, {\n        xs: 24,\n        sm: 12,\n        md: 8,\n        lg: 8,\n        xl: 8,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          hoverable: true,\n          cover: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: imageInfo.url,\n            alt: imageInfo.title,\n            style: {\n              objectFit: 'cover',\n              height: 200\n            },\n            onClick: () => handleImageClick(imageInfo.url, imageInfo.title)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n            title: imageInfo.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)\n      }, imageInfo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      title: previewTitle,\n      visible: isPreviewVisible,\n      footer: null,\n      onCancel: handlePreviewClose,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: previewImage,\n        alt: previewTitle,\n        style: {\n          width: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ImageGridWithPreview, \"50EzeImfXVRHFJF5iE2vyQUHB8Y=\");\n_c = ImageGridWithPreview;\nexport default ImageGridWithPreview;\nvar _c;\n$RefreshReg$(_c, \"ImageGridWithPreview\");","map":{"version":3,"names":["React","useState","Row","Col","Card","Modal","jsxDEV","_jsxDEV","Fragment","_Fragment","imageUrls","id","url","title","ImageGridWithPreview","_s","previewImage","setPreviewImage","previewTitle","setPreviewTitle","isPreviewVisible","setIsPreviewVisible","handleImageClick","handlePreviewClose","children","gutter","map","imageInfo","xs","sm","md","lg","xl","hoverable","cover","src","alt","style","objectFit","height","onClick","fileName","_jsxFileName","lineNumber","columnNumber","Meta","visible","footer","onCancel","width","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/ASWIN/datasci-ui/src/ColBox.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Row, Col, Card, Modal } from 'antd';\r\n\r\nconst imageUrls = [\r\n  { id: 1, url: 'image-url-1.jpg', title: 'Image 1' },\r\n  { id: 2, url: 'image-url-2.jpg', title: 'Image 2' },\r\n  { id: 3, url: 'image-url-3.jpg', title: 'Image 3' },\r\n  { id: 4, url: 'image-url-4.jpg', title: 'Image 4' },\r\n  { id: 5, url: 'image-url-5.jpg', title: 'Image 5' },\r\n  { id: 6, url: 'image-url-6.jpg', title: 'Image 6' },\r\n  { id: 7, url: 'image-url-7.jpg', title: 'Image 7' },\r\n  { id: 8, url: 'image-url-8.jpg', title: 'Image 8' },\r\n  { id: 9, url: 'image-url-9.jpg', title: 'Image 9' },\r\n];\r\n\r\nconst ImageGridWithPreview = () => {\r\n  const [previewImage, setPreviewImage] = useState('');\r\n  const [previewTitle, setPreviewTitle] = useState('');\r\n  const [isPreviewVisible, setIsPreviewVisible] = useState(false);\r\n\r\n  const handleImageClick = (url, title) => {\r\n    setPreviewImage(url);\r\n    setPreviewTitle(title);\r\n    setIsPreviewVisible(true);\r\n  };\r\n\r\n  const handlePreviewClose = () => {\r\n    setIsPreviewVisible(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row gutter={[16, 16]}>\r\n        {imageUrls.map((imageInfo) => (\r\n          <Col key={imageInfo.id} xs={24} sm={12} md={8} lg={8} xl={8}>\r\n            <Card\r\n              hoverable\r\n              cover={\r\n                <img\r\n                  src={imageInfo.url}\r\n                  alt={imageInfo.title}\r\n                  style={{ objectFit: 'cover', height: 200 }}\r\n                  onClick={() => handleImageClick(imageInfo.url, imageInfo.title)}\r\n                />\r\n              }\r\n            >\r\n              <Card.Meta title={imageInfo.title} />\r\n            </Card>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n\r\n      <Modal\r\n        title={previewTitle}\r\n        visible={isPreviewVisible}\r\n        footer={null}\r\n        onCancel={handlePreviewClose}\r\n      >\r\n        <img src={previewImage} alt={previewTitle} style={{ width: '100%' }} />\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImageGridWithPreview;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}